install.packages("devtools")
devtools::install_github("hadley/fueleconomy")
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
# Use the `libary()` function to load the "fueleconomy" package
library(fueleconomy)
# You should now have access to the `vehicles` data frame
# You can use `View()` to inspect it
View(vehicles)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
manufacturers <- vehicles[, "make"]
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
manufacturers <- vehicles$makes
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
unique(manufacturers)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
manufacturers <- vehicles$make
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
unique(manufacturers)
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
lengtrh(unique(manufacturers))
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
length(unique(manufacturers))
# Filter the data set for vehicles manufactured in 1997
vehicles[vehicles$year == 1997, ]
# Filter the data set for vehicles manufactured in 1997
vehicles <- vehicles[vehicles$year == 1997, ]
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
vehicles_1997$average <- (vehicles_1997$hwy + vehicles_1997$cty)/2
manufacturers <- vehicles$make
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
length(unique(manufacturers))
# Filter the data set for vehicles manufactured in 1997
vehicles_1997 <- vehicles[vehicles$year == 1997, ]
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
# Mutate the 1997 cars data frame to add a column `average` that has the average
# gas milage (between city and highway mpg) for each car
vehicles_1997$average <- (vehicles_1997$hwy + vehicles_1997$cty)/2
View(vehicles_1997)
# Filter the whole vehicles data set for 2-Wheel Drive vehicles that get more
# than 20 miles/gallon in the city.
# Save this new data frame in a variable.
vehicles_2wd <- vehicles[vehicles$drive == "2-Wheel Drive",]
efficent_2wd <- vehicles_2wd[vehicles_2wd$cty >20,]
vehicles_2wd[vehicles_2wd$hwy == min(vehicles_2wd$hwy),]
vehicles_2wd[vehicles_2wd$hwy == min(vehicles_2wd), "id"]
library("dplyer")
library("dplyr")
hwy_worst <- vehicles_2wd[vehicles_2wd$hwy == min(vehicles_2wd),"id"]
library("dplyr")
hwy_worst <- vehicles_2wd[vehicles_2wd$hwy == min(vehicles_2wd$hwy),"id"]
library("dplyr")
install.packages("dplyer")
install.packages("dplyr")
install.packages("dplyr")
hwy_worst <- vehicles_2wd[vehicles_2wd$hwy == min(vehicles_2wd$hwy),"id"]
install.packages("nycflights13")
install.packages("nycflights13")
# The data frame `flights` should now be accessible to you.
# Use functions to inspect it: how many rows and columns does it have?
# What are the names of the columns?
# Use `??flights` to search for documentation on the data set (for what the
# columns represent)
??flights
View(nycflights)
View(nycflights13)
View("nycflights13")
library("nycflights13")
View("nycflights13")
library("dpylr")
install.packages("nycflights13")
library("nycflights13")
View("nycflights13")
install.packages("nycflights13")
View(flights)
# Create a data.frame of flights headed to SeaTac ('SEA'), only including the
# origin, destination, and the "gain_in_air" column you just created
to_seatac <- filter(flights, dest == "SEA")
View(to_seatac)
to_sea <- select(to_seatac, origin, dest, delay_in_air)
to_sea <- select(to_seatac, origin, dest, delayed_in_air)
# Select the different manufacturers (makes) of the cars in this data set.
# Save this vector in a variable
manufacturers <- vehicles$make
# Use the `unique()` function to determine how many different car manufacturers
# are represented by the data set
length(unique(manufacturers))
# Filter the data set for vehicles manufactured in 1997
vehicles_1997 <- vehicles[vehicles$year == "1997", ]
View(vehicles_1997)
# Arrange the 1997 cars by highway (`hwy`) gas milage
# Hint: use the `order()` function to get a vector of indices in order by value
# See also:
# https://www.r-bloggers.com/r-sorting-a-data-frame-by-the-contents-of-a-column/
vehicles_1997[order(vehicles_1997$hwy),]
# Use `dplyr` to give the data frame a new column that is the amount of time
# gained or lost while flying (that is: how much of the delay arriving occured
# during flight, as opposed to before departing).
flights <- mutate(flights,delayed_in_air = arr_delay - dep_deplay)
# Use `dplyr` to sort your data frame in descending order by the column you just
# created. Remember to save this as a variable (or in the same one!)
fligths <- arrange(flights, delayed_in_air)
# On average, did flights gain or lose time?
# Note: use the `na.rm = TRUE` argument to remove NA values from your aggregation
summarize(flights, avg = mean(delayed_in_air, na.rm = TRUE)
